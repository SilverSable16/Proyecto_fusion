{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aponc\\\\OneDrive\\\\Desktop\\\\Fusion\\\\Front\\\\src\\\\components\\\\cart\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState(() => {\n    // Intenta obtener los elementos del carrito del localStorage al cargar la página\n    try {\n      const savedCart = localStorage.getItem('cartItems');\n      return savedCart ? JSON.parse(savedCart) : [];\n    } catch (error) {\n      console.error(\"Error al cargar el carrito desde localStorage:\", error);\n      return [];\n    }\n  });\n\n  // Guarda el carrito en el localStorage cada vez que cambia el estado\n  useEffect(() => {\n    try {\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n    } catch (error) {\n      console.error(\"Error al guardar el carrito en localStorage:\", error);\n    }\n  }, [cartItems]);\n  const addToCart = item => {\n    try {\n      setCartItems(prevItems => {\n        // Verifica si el artículo ya está en el carrito comparando todos los atributos relevantes\n        const existingItemIndex = prevItems.findIndex(cartItem => cartItem.id === item.id && cartItem.nombre === item.nombre && cartItem.precio === item.precio && cartItem.imagen === item.imagen);\n        if (existingItemIndex !== -1) {\n          // Si ya está, incrementa la cantidad\n          const updatedItems = [...prevItems];\n          updatedItems[existingItemIndex].quantity += 1; // Incrementa la cantidad en 1\n          return updatedItems;\n        } else {\n          // Si no está, agrégalo al carrito con una cantidad inicial de 1\n          return [...prevItems, {\n            ...item,\n            quantity: 1\n          }];\n        }\n      });\n      console.log(\"Item added to cart:\", item); // Para depuración\n    } catch (error) {\n      console.error(\"Error al agregar el artículo al carrito:\", error);\n    }\n  };\n  const updateCartItemQuantity = (itemId, newQuantity) => {\n    try {\n      setCartItems(prevItems => {\n        return prevItems.map(item => item.id === itemId ? {\n          ...item,\n          quantity: newQuantity\n        } : item).filter(item => item.quantity > 0); // Filtra los artículos con cantidad mayor a cero\n      });\n      console.log(\"Updated item quantity:\", itemId, newQuantity); // Para depuración\n    } catch (error) {\n      console.error(\"Error al actualizar la cantidad del artículo:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      updateCartItemQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n// Hook para usar el contexto de carrito\n_s(CartProvider, \"QVasbHUje88y/ZwCrJwzkwbyU7k=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","savedCart","localStorage","getItem","JSON","parse","error","console","setItem","stringify","addToCart","item","prevItems","existingItemIndex","findIndex","cartItem","id","nombre","precio","imagen","updatedItems","quantity","log","updateCartItemQuantity","itemId","newQuantity","map","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/aponc/OneDrive/Desktop/Fusion/Front/src/components/cart/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    const [cartItems, setCartItems] = useState(() => {\r\n        // Intenta obtener los elementos del carrito del localStorage al cargar la página\r\n        try {\r\n            const savedCart = localStorage.getItem('cartItems');\r\n            return savedCart ? JSON.parse(savedCart) : [];\r\n        } catch (error) {\r\n            console.error(\"Error al cargar el carrito desde localStorage:\", error);\r\n            return [];\r\n        }\r\n    });\r\n\r\n    // Guarda el carrito en el localStorage cada vez que cambia el estado\r\n    useEffect(() => {\r\n        try {\r\n            localStorage.setItem('cartItems', JSON.stringify(cartItems));\r\n        } catch (error) {\r\n            console.error(\"Error al guardar el carrito en localStorage:\", error);\r\n        }\r\n    }, [cartItems]);\r\n\r\n    const addToCart = (item) => {\r\n        try {\r\n            setCartItems((prevItems) => {\r\n                // Verifica si el artículo ya está en el carrito comparando todos los atributos relevantes\r\n                const existingItemIndex = prevItems.findIndex(cartItem => \r\n                    cartItem.id === item.id &&\r\n                    cartItem.nombre === item.nombre &&\r\n                    cartItem.precio === item.precio &&\r\n                    cartItem.imagen === item.imagen\r\n                );\r\n\r\n                if (existingItemIndex !== -1) {\r\n                    // Si ya está, incrementa la cantidad\r\n                    const updatedItems = [...prevItems];\r\n                    updatedItems[existingItemIndex].quantity += 1; // Incrementa la cantidad en 1\r\n                    return updatedItems;\r\n                } else {\r\n                    // Si no está, agrégalo al carrito con una cantidad inicial de 1\r\n                    return [...prevItems, { ...item, quantity: 1 }];\r\n                }\r\n            });\r\n            console.log(\"Item added to cart:\", item); // Para depuración\r\n        } catch (error) {\r\n            console.error(\"Error al agregar el artículo al carrito:\", error);\r\n        }\r\n    };\r\n\r\n    const updateCartItemQuantity = (itemId, newQuantity) => {\r\n        try {\r\n            setCartItems((prevItems) => {\r\n                return prevItems\r\n                    .map(item =>\r\n                        item.id === itemId\r\n                            ? { ...item, quantity: newQuantity }\r\n                            : item\r\n                    )\r\n                    .filter(item => item.quantity > 0); // Filtra los artículos con cantidad mayor a cero\r\n            });\r\n            console.log(\"Updated item quantity:\", itemId, newQuantity); // Para depuración\r\n        } catch (error) {\r\n            console.error(\"Error al actualizar la cantidad del artículo:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <CartContext.Provider value={{ cartItems, addToCart, updateCartItemQuantity }}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\n// Hook para usar el contexto de carrito\r\nexport const useCart = () => {\r\n    return useContext(CartContext);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}