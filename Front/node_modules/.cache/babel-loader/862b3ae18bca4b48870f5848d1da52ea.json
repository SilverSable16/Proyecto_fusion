{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aponc\\\\OneDrive\\\\Desktop\\\\Fusion\\\\Front\\\\src\\\\components\\\\cart\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState(() => {\n    // Intenta obtener los elementos del carrito del localStorage al cargar la página\n    try {\n      const savedCart = localStorage.getItem('cartItems');\n      return savedCart ? JSON.parse(savedCart) : [];\n    } catch (error) {\n      console.error(\"Error al cargar el carrito desde localStorage:\", error);\n      return [];\n    }\n  });\n\n  // Guarda el carrito en el localStorage cada vez que cambia el estado\n  useEffect(() => {\n    try {\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n    } catch (error) {\n      console.error(\"Error al guardar el carrito en localStorage:\", error);\n    }\n  }, [cartItems]);\n  const addToCart = item => {\n    setCartItems(prevItems => {\n      // Verifica si el artículo ya está en el carrito comparando todos los atributos relevantes\n      const existingItemIndex = prevItems.findIndex(cartItem => cartItem.id === item.id);\n      if (existingItemIndex !== -1) {\n        // Si ya está, actualiza la cantidad\n        const updatedItems = [...prevItems];\n        updatedItems[existingItemIndex].quantity += item.quantity; // Usa item.quantity directamente\n        return updatedItems;\n      } else {\n        // Si no está, agrégalo al carrito con la cantidad especificada\n        return [...prevItems, {\n          ...item\n        }]; // No necesitas añadir quantity aquí porque ya está incluido en item\n      }\n    });\n    console.log(\"Item added to cart:\", item); // Para depuración\n  };\n  const updateCartItemQuantity = (itemId, newQuantity) => {\n    try {\n      setCartItems(prevItems => {\n        return prevItems.map(item => item.id === itemId ? {\n          ...item,\n          quantity: newQuantity\n        } : item).filter(item => item.quantity > 0); // Filtra los artículos con cantidad mayor a cero\n      });\n      console.log(\"Updated item quantity:\", itemId, newQuantity); // Para depuración\n    } catch (error) {\n      console.error(\"Error al actualizar la cantidad del artículo:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      updateCartItemQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n// Hook para usar el contexto de carrito\n_s(CartProvider, \"QVasbHUje88y/ZwCrJwzkwbyU7k=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","savedCart","localStorage","getItem","JSON","parse","error","console","setItem","stringify","addToCart","item","prevItems","existingItemIndex","findIndex","cartItem","id","updatedItems","quantity","log","updateCartItemQuantity","itemId","newQuantity","map","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/aponc/OneDrive/Desktop/Fusion/Front/src/components/cart/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    const [cartItems, setCartItems] = useState(() => {\r\n        // Intenta obtener los elementos del carrito del localStorage al cargar la página\r\n        try {\r\n            const savedCart = localStorage.getItem('cartItems');\r\n            return savedCart ? JSON.parse(savedCart) : [];\r\n        } catch (error) {\r\n            console.error(\"Error al cargar el carrito desde localStorage:\", error);\r\n            return [];\r\n        }\r\n    });\r\n\r\n    // Guarda el carrito en el localStorage cada vez que cambia el estado\r\n    useEffect(() => {\r\n        try {\r\n            localStorage.setItem('cartItems', JSON.stringify(cartItems));\r\n        } catch (error) {\r\n            console.error(\"Error al guardar el carrito en localStorage:\", error);\r\n        }\r\n    }, [cartItems]);\r\n\r\n    const addToCart = (item) => {\r\n        setCartItems((prevItems) => {\r\n            // Verifica si el artículo ya está en el carrito comparando todos los atributos relevantes\r\n            const existingItemIndex = prevItems.findIndex(cartItem => \r\n                cartItem.id === item.id\r\n            );\r\n    \r\n            if (existingItemIndex !== -1) {\r\n                // Si ya está, actualiza la cantidad\r\n                const updatedItems = [...prevItems];\r\n                updatedItems[existingItemIndex].quantity += item.quantity; // Usa item.quantity directamente\r\n                return updatedItems;\r\n            } else {\r\n                // Si no está, agrégalo al carrito con la cantidad especificada\r\n                return [...prevItems, { ...item }]; // No necesitas añadir quantity aquí porque ya está incluido en item\r\n            }\r\n        });\r\n        console.log(\"Item added to cart:\", item); // Para depuración\r\n    };\r\n    \r\n    \r\n\r\n    const updateCartItemQuantity = (itemId, newQuantity) => {\r\n        try {\r\n            setCartItems((prevItems) => {\r\n                return prevItems\r\n                    .map(item =>\r\n                        item.id === itemId\r\n                            ? { ...item, quantity: newQuantity }\r\n                            : item\r\n                    )\r\n                    .filter(item => item.quantity > 0); // Filtra los artículos con cantidad mayor a cero\r\n            });\r\n            console.log(\"Updated item quantity:\", itemId, newQuantity); // Para depuración\r\n        } catch (error) {\r\n            console.error(\"Error al actualizar la cantidad del artículo:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <CartContext.Provider value={{ cartItems, addToCart, updateCartItemQuantity }}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\n// Hook para usar el contexto de carrito\r\nexport const useCart = () => {\r\n    return useContext(CartContext);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}