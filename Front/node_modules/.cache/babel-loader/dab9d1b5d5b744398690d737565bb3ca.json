{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aponc\\\\OneDrive\\\\Desktop\\\\Fusion\\\\Front\\\\src\\\\components\\\\cart\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState(() => {\n    // Intenta obtener los elementos del carrito del localStorage al cargar la página\n    const savedCart = localStorage.getItem('cartItems');\n    return savedCart ? JSON.parse(savedCart) : [];\n  });\n\n  // Guarda el carrito en el localStorage cada vez que cambia el estado\n  useEffect(() => {\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  }, [cartItems]);\n  const addToCart = item => {\n    setCartItems(prevItems => {\n      // Verifica si el artículo ya está en el carrito\n      const existingItemIndex = prevItems.findIndex(cartItem => cartItem.id === item.id);\n      if (existingItemIndex !== -1) {\n        // Si ya está, incrementa la cantidad\n        const updatedItems = [...prevItems];\n        updatedItems[existingItemIndex].quantity += 1; // Incrementa la cantidad en 1\n        return updatedItems;\n      } else {\n        // Si no está, agrégalo al carrito con una cantidad inicial de 1\n        return [...prevItems, {\n          ...item,\n          quantity: 1\n        }];\n      }\n    });\n    console.log(\"Item added to cart:\", item); // Para depuración\n  };\n  const updateCartItemQuantity = (itemId, newQuantity) => {\n    setCartItems(prevItems => {\n      return prevItems.map(item => item.id === itemId ? {\n        ...item,\n        quantity: newQuantity\n      } : item).filter(item => item.quantity > 0); // Filtra los artículos con cantidad mayor a cero\n    });\n    console.log(\"Updated item quantity:\", itemId, newQuantity); // Para depuración\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      updateCartItemQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n// Hook para usar el contexto de carrito\n_s(CartProvider, \"G3xpI0jUKnzAkOqkaSkr3SbbVEY=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","savedCart","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","item","prevItems","existingItemIndex","findIndex","cartItem","id","updatedItems","quantity","console","log","updateCartItemQuantity","itemId","newQuantity","map","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/aponc/OneDrive/Desktop/Fusion/Front/src/components/cart/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    const [cartItems, setCartItems] = useState(() => {\r\n        // Intenta obtener los elementos del carrito del localStorage al cargar la página\r\n        const savedCart = localStorage.getItem('cartItems');\r\n        return savedCart ? JSON.parse(savedCart) : [];\r\n    });\r\n\r\n    // Guarda el carrito en el localStorage cada vez que cambia el estado\r\n    useEffect(() => {\r\n        localStorage.setItem('cartItems', JSON.stringify(cartItems));\r\n    }, [cartItems]);\r\n\r\n    const addToCart = (item) => {\r\n        setCartItems((prevItems) => {\r\n            // Verifica si el artículo ya está en el carrito\r\n            const existingItemIndex = prevItems.findIndex(cartItem => cartItem.id === item.id);\r\n            if (existingItemIndex !== -1) {\r\n                // Si ya está, incrementa la cantidad\r\n                const updatedItems = [...prevItems];\r\n                updatedItems[existingItemIndex].quantity += 1; // Incrementa la cantidad en 1\r\n                return updatedItems;\r\n            } else {\r\n                // Si no está, agrégalo al carrito con una cantidad inicial de 1\r\n                return [...prevItems, { ...item, quantity: 1 }];\r\n            }\r\n        });\r\n        console.log(\"Item added to cart:\", item); // Para depuración\r\n    };\r\n\r\n    const updateCartItemQuantity = (itemId, newQuantity) => {\r\n        setCartItems((prevItems) => {\r\n            return prevItems\r\n                .map(item =>\r\n                    item.id === itemId\r\n                        ? { ...item, quantity: newQuantity }\r\n                        : item\r\n                )\r\n                .filter(item => item.quantity > 0); // Filtra los artículos con cantidad mayor a cero\r\n        });\r\n        console.log(\"Updated item quantity:\", itemId, newQuantity); // Para depuración\r\n    };\r\n\r\n    return (\r\n        <CartContext.Provider value={{ cartItems, addToCart, updateCartItemQuantity }}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\n// Hook para usar el contexto de carrito\r\nexport const useCart = () => {\r\n    return useContext(CartContext);\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,MAAM;IAC7C;IACA,MAAMW,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnD,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,EAAE;EACjD,CAAC,CAAC;;EAEF;EACAT,SAAS,CAAC,MAAM;IACZU,YAAY,CAACI,OAAO,CAAC,WAAW,EAAEF,IAAI,CAACG,SAAS,CAACR,SAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMS,SAAS,GAAIC,IAAI,IAAK;IACxBT,YAAY,CAAEU,SAAS,IAAK;MACxB;MACA,MAAMC,iBAAiB,GAAGD,SAAS,CAACE,SAAS,CAACC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,CAAC;MAClF,IAAIH,iBAAiB,KAAK,CAAC,CAAC,EAAE;QAC1B;QACA,MAAMI,YAAY,GAAG,CAAC,GAAGL,SAAS,CAAC;QACnCK,YAAY,CAACJ,iBAAiB,CAAC,CAACK,QAAQ,IAAI,CAAC,CAAC,CAAC;QAC/C,OAAOD,YAAY;MACvB,CAAC,MAAM;QACH;QACA,OAAO,CAAC,GAAGL,SAAS,EAAE;UAAE,GAAGD,IAAI;UAAEO,QAAQ,EAAE;QAAE,CAAC,CAAC;MACnD;IACJ,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAET,IAAI,CAAC,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMU,sBAAsB,GAAGA,CAACC,MAAM,EAAEC,WAAW,KAAK;IACpDrB,YAAY,CAAEU,SAAS,IAAK;MACxB,OAAOA,SAAS,CACXY,GAAG,CAACb,IAAI,IACLA,IAAI,CAACK,EAAE,KAAKM,MAAM,GACZ;QAAE,GAAGX,IAAI;QAAEO,QAAQ,EAAEK;MAAY,CAAC,GAClCZ,IACV,CAAC,CACAc,MAAM,CAACd,IAAI,IAAIA,IAAI,CAACO,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEE,MAAM,EAAEC,WAAW,CAAC,CAAC,CAAC;EAChE,CAAC;EAED,oBACI3B,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAE1B,SAAS;MAAES,SAAS;MAAEW;IAAuB,CAAE;IAAAtB,QAAA,EACzEA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;;AAED;AAAA/B,EAAA,CAjDaF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAkDzB,OAAO,MAAMmC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,OAAOzC,UAAU,CAACI,WAAW,CAAC;AAClC,CAAC;AAACqC,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}