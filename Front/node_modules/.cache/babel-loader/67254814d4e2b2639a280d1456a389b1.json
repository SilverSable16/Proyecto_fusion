{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aponc\\\\OneDrive\\\\Desktop\\\\Fusion\\\\Front\\\\src\\\\components\\\\cart\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const addToCart = item => {\n    setCartItems(prevItems => {\n      // Verifica si el artículo ya está en el carrito comparando solo el ID\n      const existingItemIndex = prevItems.findIndex(cartItem => cartItem.id === item.id);\n      if (existingItemIndex !== -1) {\n        // Si ya está, actualiza la cantidad\n        const updatedItems = [...prevItems];\n        updatedItems[existingItemIndex].quantity += item.quantity; // Suma la cantidad especificada\n        return updatedItems;\n      } else {\n        // Si no está, agrégalo al carrito con la cantidad especificada\n        return [...prevItems, {\n          ...item\n        }]; // Almacena el item tal como viene\n      }\n    });\n    console.log(\"Item added to cart:\", item); // Para depuración\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== itemId));\n    console.log(\"Item removed from cart:\", itemId); // Para depuración\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n// Hook para usar el contexto de carrito\n_s(CartProvider, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","addToCart","item","prevItems","existingItemIndex","findIndex","cartItem","id","updatedItems","quantity","console","log","removeFromCart","itemId","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/aponc/OneDrive/Desktop/Fusion/Front/src/components/cart/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    const [cartItems, setCartItems] = useState([]);\r\n\r\n    const addToCart = (item) => {\r\n        setCartItems((prevItems) => {\r\n            // Verifica si el artículo ya está en el carrito comparando solo el ID\r\n            const existingItemIndex = prevItems.findIndex(cartItem => \r\n                cartItem.id === item.id\r\n            );\r\n\r\n            if (existingItemIndex !== -1) {\r\n                // Si ya está, actualiza la cantidad\r\n                const updatedItems = [...prevItems];\r\n                updatedItems[existingItemIndex].quantity += item.quantity; // Suma la cantidad especificada\r\n                return updatedItems;\r\n            } else {\r\n                // Si no está, agrégalo al carrito con la cantidad especificada\r\n                return [...prevItems, { ...item }]; // Almacena el item tal como viene\r\n            }\r\n        });\r\n        console.log(\"Item added to cart:\", item); // Para depuración\r\n    };\r\n\r\n    const removeFromCart = (itemId) => {\r\n        setCartItems((prevItems) => prevItems.filter(item => item.id !== itemId));\r\n        console.log(\"Item removed from cart:\", itemId); // Para depuración\r\n    };\r\n\r\n    return (\r\n        <CartContext.Provider value={{ cartItems, addToCart, removeFromCart }}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\n// Hook para usar el contexto de carrito\r\nexport const useCart = () => {\r\n    return useContext(CartContext);\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,SAAS,GAAIC,IAAI,IAAK;IACxBF,YAAY,CAAEG,SAAS,IAAK;MACxB;MACA,MAAMC,iBAAiB,GAAGD,SAAS,CAACE,SAAS,CAACC,QAAQ,IAClDA,QAAQ,CAACC,EAAE,KAAKL,IAAI,CAACK,EACzB,CAAC;MAED,IAAIH,iBAAiB,KAAK,CAAC,CAAC,EAAE;QAC1B;QACA,MAAMI,YAAY,GAAG,CAAC,GAAGL,SAAS,CAAC;QACnCK,YAAY,CAACJ,iBAAiB,CAAC,CAACK,QAAQ,IAAIP,IAAI,CAACO,QAAQ,CAAC,CAAC;QAC3D,OAAOD,YAAY;MACvB,CAAC,MAAM;QACH;QACA,OAAO,CAAC,GAAGL,SAAS,EAAE;UAAE,GAAGD;QAAK,CAAC,CAAC,CAAC,CAAC;MACxC;IACJ,CAAC,CAAC;IACFQ,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAET,IAAI,CAAC,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMU,cAAc,GAAIC,MAAM,IAAK;IAC/Bb,YAAY,CAAEG,SAAS,IAAKA,SAAS,CAACW,MAAM,CAACZ,IAAI,IAAIA,IAAI,CAACK,EAAE,KAAKM,MAAM,CAAC,CAAC;IACzEH,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEE,MAAM,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,oBACInB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,SAAS;MAAEE,SAAS;MAAEW;IAAe,CAAE;IAAAf,QAAA,EACjEA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;;AAED;AAAAtB,EAAA,CAnCaF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAoCzB,OAAO,MAAM0B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,OAAO/B,UAAU,CAACG,WAAW,CAAC;AAClC,CAAC;AAAC4B,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}