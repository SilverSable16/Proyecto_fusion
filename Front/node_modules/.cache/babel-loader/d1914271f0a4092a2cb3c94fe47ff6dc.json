{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aponc\\\\OneDrive\\\\Desktop\\\\Fusion\\\\Front\\\\src\\\\components\\\\cart\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState(() => {\n    // Intenta recuperar los artículos del session storage\n    const savedItems = sessionStorage.getItem('cartItems');\n    return savedItems ? JSON.parse(savedItems) : [];\n  });\n  useEffect(() => {\n    // Guarda los artículos en session storage cada vez que cambien\n    sessionStorage.setItem('cartItems', JSON.stringify(cartItems));\n  }, [cartItems]);\n  const addToCart = item => {\n    setCartItems(prevItems => [...prevItems, item]);\n    console.log(\"Item added to cart:\", item);\n  };\n  const updateCartItemQuantity = (itemId, newQuantity) => {\n    setCartItems(prevItems => {\n      return prevItems.map(item => item.id === itemId ? {\n        ...item,\n        quantity: newQuantity\n      } : item).filter(item => item.quantity > 0);\n    });\n    console.log(\"Updated item quantity:\", itemId, newQuantity);\n  };\n  const clearCart = () => {\n    setCartItems([]);\n    sessionStorage.removeItem('cartItems'); // Limpia el session storage\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      updateCartItemQuantity,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n// Hook para usar el contexto de carrito\n_s(CartProvider, \"RMnb827eE0z/5m6b+5yfEgYxpNM=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","savedItems","sessionStorage","getItem","JSON","parse","setItem","stringify","addToCart","item","prevItems","console","log","updateCartItemQuantity","itemId","newQuantity","map","id","quantity","filter","clearCart","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/aponc/OneDrive/Desktop/Fusion/Front/src/components/cart/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    const [cartItems, setCartItems] = useState(() => {\r\n        // Intenta recuperar los artículos del session storage\r\n        const savedItems = sessionStorage.getItem('cartItems');\r\n        return savedItems ? JSON.parse(savedItems) : [];\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Guarda los artículos en session storage cada vez que cambien\r\n        sessionStorage.setItem('cartItems', JSON.stringify(cartItems));\r\n    }, [cartItems]);\r\n\r\n    const addToCart = (item) => {\r\n        setCartItems((prevItems) => [...prevItems, item]);\r\n        console.log(\"Item added to cart:\", item);\r\n    };\r\n\r\n    const updateCartItemQuantity = (itemId, newQuantity) => {\r\n        setCartItems((prevItems) => {\r\n            return prevItems\r\n                .map(item =>\r\n                    item.id === itemId\r\n                        ? { ...item, quantity: newQuantity }\r\n                        : item\r\n                )\r\n                .filter(item => item.quantity > 0);\r\n        });\r\n        console.log(\"Updated item quantity:\", itemId, newQuantity);\r\n    };\r\n\r\n    const clearCart = () => {\r\n        setCartItems([]);\r\n        sessionStorage.removeItem('cartItems'); // Limpia el session storage\r\n    };\r\n\r\n    return (\r\n        <CartContext.Provider value={{ cartItems, addToCart, updateCartItemQuantity, clearCart }}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\n// Hook para usar el contexto de carrito\r\nexport const useCart = () => {\r\n    return useContext(CartContext);\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,MAAM;IAC7C;IACA,MAAMW,UAAU,GAAGC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;IACtD,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,EAAE;EACnD,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACZ;IACAU,cAAc,CAACI,OAAO,CAAC,WAAW,EAAEF,IAAI,CAACG,SAAS,CAACR,SAAS,CAAC,CAAC;EAClE,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMS,SAAS,GAAIC,IAAI,IAAK;IACxBT,YAAY,CAAEU,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,IAAI,CAAC,CAAC;IACjDE,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,IAAI,CAAC;EAC5C,CAAC;EAED,MAAMI,sBAAsB,GAAGA,CAACC,MAAM,EAAEC,WAAW,KAAK;IACpDf,YAAY,CAAEU,SAAS,IAAK;MACxB,OAAOA,SAAS,CACXM,GAAG,CAACP,IAAI,IACLA,IAAI,CAACQ,EAAE,KAAKH,MAAM,GACZ;QAAE,GAAGL,IAAI;QAAES,QAAQ,EAAEH;MAAY,CAAC,GAClCN,IACV,CAAC,CACAU,MAAM,CAACV,IAAI,IAAIA,IAAI,CAACS,QAAQ,GAAG,CAAC,CAAC;IAC1C,CAAC,CAAC;IACFP,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEE,MAAM,EAAEC,WAAW,CAAC;EAC9D,CAAC;EAED,MAAMK,SAAS,GAAGA,CAAA,KAAM;IACpBpB,YAAY,CAAC,EAAE,CAAC;IAChBE,cAAc,CAACmB,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;EAC5C,CAAC;EAED,oBACI3B,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAExB,SAAS;MAAES,SAAS;MAAEK,sBAAsB;MAAEO;IAAU,CAAE;IAAAvB,QAAA,EACpFA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;;AAED;AAAA7B,EAAA,CA1CaF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AA2CzB,OAAO,MAAMiC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,OAAOvC,UAAU,CAACI,WAAW,CAAC;AAClC,CAAC;AAACmC,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}