{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aponc\\\\OneDrive\\\\Desktop\\\\Fusion\\\\Front\\\\src\\\\components\\\\cart\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState(() => {\n    // Recuperar los elementos del carrito desde localStorage al iniciar\n    const storedCart = localStorage.getItem('cartItems');\n    return storedCart ? JSON.parse(storedCart) : [];\n  });\n\n  // Función para actualizar el carrito en el estado y en localStorage\n  const updateCart = items => {\n    setCartItems(items);\n    localStorage.setItem('cartItems', JSON.stringify(items));\n  };\n  const addToCart = item => {\n    // Verificar si el artículo ya está en el carrito\n    const existingItem = cartItems.find(cartItem => cartItem.id === item.id);\n    if (existingItem) {\n      // Si el artículo ya existe, incrementar la cantidad\n      const updatedCart = cartItems.map(cartItem => cartItem.id === item.id ? {\n        ...cartItem,\n        quantity: cartItem.quantity + 1\n      } : cartItem);\n      updateCart(updatedCart);\n    } else {\n      // Si no existe, añadir el artículo con cantidad 1\n      const updatedCart = [...cartItems, {\n        ...item,\n        quantity: 1\n      }];\n      updateCart(updatedCart);\n    }\n    console.log(\"Item added to cart:\", item); // Para depuración\n  };\n  const removeFromCart = (itemId, quantityToRemove) => {\n    const updatedCart = cartItems.map(item => {\n      if (item.id === itemId) {\n        const newQuantity = item.quantity - quantityToRemove;\n        // Si la cantidad se reduce a 0 o menos, eliminamos el artículo\n        return newQuantity <= 0 ? null : {\n          ...item,\n          quantity: newQuantity\n        };\n      }\n      return item;\n    }).filter(Boolean); // Filtrar los elementos null (los que se eliminaron)\n\n    updateCart(updatedCart);\n    console.log(\"Item removed from cart:\", itemId); // Para depuración\n  };\n\n  // Efecto para sincronizar el estado del carrito con localStorage cuando cambia\n  useEffect(() => {\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  }, [cartItems]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n// Hook para usar el contexto de carrito\n_s(CartProvider, \"EgAH/8uV1CLJVsdZ8wlokv3DVJo=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","storedCart","localStorage","getItem","JSON","parse","updateCart","items","setItem","stringify","addToCart","item","existingItem","find","cartItem","id","updatedCart","map","quantity","console","log","removeFromCart","itemId","quantityToRemove","newQuantity","filter","Boolean","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/aponc/OneDrive/Desktop/Fusion/Front/src/components/cart/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    const [cartItems, setCartItems] = useState(() => {\r\n        // Recuperar los elementos del carrito desde localStorage al iniciar\r\n        const storedCart = localStorage.getItem('cartItems');\r\n        return storedCart ? JSON.parse(storedCart) : [];\r\n    });\r\n\r\n    // Función para actualizar el carrito en el estado y en localStorage\r\n    const updateCart = (items) => {\r\n        setCartItems(items);\r\n        localStorage.setItem('cartItems', JSON.stringify(items));\r\n    };\r\n\r\n    const addToCart = (item) => {\r\n        // Verificar si el artículo ya está en el carrito\r\n        const existingItem = cartItems.find(cartItem => cartItem.id === item.id);\r\n        if (existingItem) {\r\n            // Si el artículo ya existe, incrementar la cantidad\r\n            const updatedCart = cartItems.map(cartItem =>\r\n                cartItem.id === item.id\r\n                    ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n                    : cartItem\r\n            );\r\n            updateCart(updatedCart);\r\n        } else {\r\n            // Si no existe, añadir el artículo con cantidad 1\r\n            const updatedCart = [...cartItems, { ...item, quantity: 1 }];\r\n            updateCart(updatedCart);\r\n        }\r\n        console.log(\"Item added to cart:\", item); // Para depuración\r\n    };\r\n\r\n    const removeFromCart = (itemId, quantityToRemove) => {\r\n        const updatedCart = cartItems.map(item => {\r\n            if (item.id === itemId) {\r\n                const newQuantity = item.quantity - quantityToRemove;\r\n                // Si la cantidad se reduce a 0 o menos, eliminamos el artículo\r\n                return newQuantity <= 0 ? null : { ...item, quantity: newQuantity };\r\n            }\r\n            return item;\r\n        }).filter(Boolean); // Filtrar los elementos null (los que se eliminaron)\r\n        \r\n        updateCart(updatedCart);\r\n        console.log(\"Item removed from cart:\", itemId); // Para depuración\r\n    };\r\n\r\n    // Efecto para sincronizar el estado del carrito con localStorage cuando cambia\r\n    useEffect(() => {\r\n        localStorage.setItem('cartItems', JSON.stringify(cartItems));\r\n    }, [cartItems]);\r\n\r\n    return (\r\n        <CartContext.Provider value={{ cartItems, addToCart, removeFromCart }}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\n// Hook para usar el contexto de carrito\r\nexport const useCart = () => {\r\n    return useContext(CartContext);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}